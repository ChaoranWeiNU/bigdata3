Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 15) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/100 > max[2]){
max = c(i,SUM/100)
}
}
max
max = c(0,0)
for (i in 1:1000) {
SUM = 0
for (j in 1:100) {
a <- runif(100,0,1000)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 15) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/100 > max[2]){
max = c(i,SUM/100)
}
}
max
max = c(0,0)
for (i in 1:1000) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:100) {
a <- runif(100,0,1000)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 100) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/100 > max[2]){
max = c(i,SUM/100)
}
}
max
max = c(0,0)
for (i in 1:1000) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:1000000000) {
a <- runif(100,0,1000)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 100) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/100 > max[2]){
max = c(i,SUM/100)
}
}
max = c(0,0)
for (i in 1:1000) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:1000) {
a <- runif(100,0,1000)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 100) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/100 > max[2]){
max = c(i,SUM/100)
}
}
max
a <- rep(0, times = 10)
a
a <- runif(100,0,100)
max = c(0,0)
for (i in 1:1000) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:1000) {
a <- runif(100,0,100)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 15) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/100 > max[2]){
max = c(i,SUM/100)
}
}
max = c(0,0)
for (i in 1:1000) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:100) {
a <- runif(100,0,1000)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 15) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/100 > max[2]){
max = c(i,SUM/100)
}
}
max
max = c(0,0)
for (i in 1:1000) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:100) {
a <- runif(100,0,1000)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 15) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/100 > max[2]){
max = c(i,SUM/100)
}
}
max
max = c(0,0)
for (i in 1:1000) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:100) {
a <- runif(100,0,1000)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 15) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/100 > max[2]){
max = c(i,SUM/100)
}
}
max
max = c(0,0)
for (i in 1:1000) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:100) {
a <- runif(100,0,1000)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 15) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/100 > max[2]){
max = c(i,SUM/100)
}
}
max
max = c(0,0)
for (i in 1:1000) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:100) {
a <- runif(100,0,1000)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 15) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/100 > max[2]){
max = c(i,SUM/100)
}
}
max
max = c(0,0)
for (i in 1:500) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:100) {
a <- runif(50,0,500)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 50) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/50 > max[2]){
max = c(i,SUM/100)
}
}
max1
for (i in 501:1000) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:100) {
a <- runif(50,500,1000)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 50) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/50 > max1[2]){
max1 = c(i,SUM/50)
}
}
max1
max = c(0,0)
for (i in 1:500) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:100) {
a <- runif(50,0,500)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 50) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/50 > max[2]){
max = c(i,SUM/100)
}
}
max
max1 = c(0,0)
for (i in 501:1000) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:100) {
a <- runif(50,500,1000)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 50) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/50 > max1[2]){
max1 = c(i,SUM/50)
}
}
max1
a <- c(0,0)
a[1] = 1
a
max
max1
max = c(0,0)
for (i in 1:500) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:100) {
a <- runif(50,0,500)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 50) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/50 > max[2]){
max = c(i,SUM/100)
}
}
max
max1 = c(0,0)
for (i in 501:1000) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:100) {
a <- runif(50,500,1000)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 50) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/50 > max1[2]){
max1 = c(i,SUM/50)
}
}
max1
max
max = c(0,0)
for (i in 1:1000) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:1000) {
a <- runif(100,0,1000)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 15) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/100 > max[2]){
max = c(i,SUM/100)
}
}
max
max = c(0,0)
for (i in 1:1000) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:1000) {
a <- runif(100,0,1000)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 15) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/100 > max[2]){
max = c(i,SUM/100)
}
}
max
max = c(0,0)
for (i in 700:950) {
SUM = 0  #Sum of all the revenue in all simulations
for (j in 1:10000) {
a <- runif(100,0,1000)
Sum = 0
count = 0
for (k in a) {
if (k > i && count <= 15) {
Sum = Sum+ i
count = count + 1
}
}
SUM = SUM + Sum
}
if (SUM/10000 > max[2]){
max = c(i,SUM/10000)
}
}
max
X = matrix(c(1,3,5,0,1, 2,4,4,2,3, 3,5,3,4,5), nrow=5)
X
a <- t(X) %*% X
b <- X %*% t(X)
a
b
eigen_a <- eigen(a)
eigen_b <- eigen(b)
eigen_a
eigen_b
eigen_a$vectors %*% diag(eigen_a$values) %*% t(eigen_a$vectors)
a
eigen_a$values
diag(svd(X)$d) %*% diag(svd(X)$d)
eigen_a$vectors
svd(X)$v
svd(X)$u %*% diag(svd(X)$d) %*% t(svd(X)$v)
X
svd(X)$d
d <-svd$d
d <-svd(X)$d
svd <- svd(X)
d <- diag(svd(X)$d)
d[2,2] <-0
d[3,3] <- 0
svd$u %*% d %*% t(svd$v)
a = matrix(1:4,nrow=2)
a
a*a
sum(a*a)
sum(one*one)
one <- svd$u %*% d %*% t(svd$v)
#1g
sum(one*one)
d
one <- svd$u[,1] %*% d %*% t(svd$v)[1,]
svd$u[,1]
t(svd$v)[1,]
d
one <- svd$u[,1] %*% d[1,1] %*% t(svd$v)[1,]
svd$u[,1]
d[1,1]
svd$u[,1] %*% d[1,1]
svd$u
svd$u[,1]
t(svd$v)[1,]
t(svd$u[,1])
t(svd$u[,1]) %*% d[1,1]
d[1,1]
one <- svd$u %*% d %*% t(svd$v)
one
sum((X-one)*(X-one))
12.39222*12.3922
(153.5669-15.433)/153.5669
install.packages('poLCA')
install.packages('proxy')
install.packages('arules')
install.packages('sna')
install.packages('intergraph')
install.packages('network')
setwd("~/Desktop/bigdata/bigdata3")
dat <- read.table('Kmeans2.txt')
dat
fit = prcomp(dat, scale = T)
fit
dat
columns(dat)
for (i in 1:10) {
dat[,i] <- (dat[,i] - mean(dat[,i]))/sd(dat[,i])
}
dat
write.csv(dat,'dat.csv')
barplot(dat)
barplot(dat,beside=TRUE)
barplot(dat[1,],beside=TRUE)
barplot(c(1,2,3,4))
dat[1,]
barplot(dat[1,])
barplot(c(1.131742, -1.072222, -1.154701, -1.072222, -0.6102808,
-0.5737667, -0.5960041, -0.578134,-0.6602412, -0.7467494))
barplot(as.vector(dat[1,]))
as.vector(dat[1,])
list(dat[1,])
matrix(dat[1,])
barplot(matrix(dat[1,]))
dat[2,]
dat[3,]
barplot(c(
-0.3674533, 0.9072648, 0.5773503, 0.9072647, 1.154062, -0.5809264,
1.154497, -0.5765662,1.150524, 1.136116
))
barplot(c(-0.764289, 0.1649571, 0.5773503, 0.1649572, -0.5437813, 1.154693, -0.5584933,
1.1547,-0.4902824, -0.3893664
))
barplot(c(
-0.3674533, 0.9072648, 0.5773503, 0.9072647, 1.154062, -0.5809264,
1.154497, -0.5765662,1.150524, 1.136116
))
barplot(c(1.131742, -1.072222, -1.154701, -1.072222, -0.6102808,
-0.5737667, -0.5960041, -0.578134,-0.6602412, -0.7467494))
barplot(c(1.131742, -1.072222, -1.154701, -1.072222, -0.6102808,
-0.5737667, -0.5960041, -0.578134,-0.6602412, -0.7467494),title = 'cluster 1')
barplot(c(1.131742, -1.072222, -1.154701, -1.072222, -0.6102808,
-0.5737667, -0.5960041, -0.578134,-0.6602412, -0.7467494),main = 'cluster 1')
barplot(c(-0.764289, 0.1649571, 0.5773503, 0.1649572, -0.5437813, 1.154693, -0.5584933,
1.1547,-0.4902824, -0.3893664
),main = 'cluster 2')
barplot(c(
-0.3674533, 0.9072648, 0.5773503, 0.9072647, 1.154062, -0.5809264,
1.154497, -0.5765662,1.150524, 1.136116
),main = 'cluster 3')
